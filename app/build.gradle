import java.text.DateFormat
import java.text.SimpleDateFormat

apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

def applicationName = "The_Weather"

static def getDateTime() {
    DateFormat df = new SimpleDateFormat("dd-MM-yyyy-HH.mm")
    return df.format(new Date())
}

android {
    compileSdkVersion Integer.parseInt(ANDROID_COMPILE_SDK_VERSION)
    buildToolsVersion ANDROID_BUILD_TOOLS_VERSION
    defaultConfig {
        applicationId "com.meksconway.theweather"
        minSdkVersion Integer.parseInt(ANDROID_MIN_SDK_VERSION)
        targetSdkVersion Integer.parseInt(ANDROID_TARGET_SDK_VERSION)
        versionCode Integer.parseInt(VERSION_CODE)
        versionName VERSION_NAME
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {

        debug {
            applicationIdSuffix '.debug'
            minifyEnabled false
            buildConfigField 'String', 'API_ADDRESS', "\"https://api.collectapi.com/weather/getWeather/\""
            buildConfigField 'String', 'API_KEY', "\"apikey 4Xe6lGctq0Mm3ayjBLPBaB:6ZgiblGHRIaE0gXS5HVbNu\""
            buildConfigField 'String', 'DB_NAME', "\"weather_db\""
            buildConfigField 'String', 'GENERAL_NETWORK_ERROR', "\"Something went wrong, please try again.\""
            buildConfigField 'String', 'DB_ENTRY_ERROR', "\"No entry found in database\""
            debuggable true
        }

        release {
            applicationIdSuffix '.prod'
            minifyEnabled false
            buildConfigField 'String', 'API_ADDRESS', "\"https://api.collectapi.com/weather/getWeather/\""
            buildConfigField 'String', 'API_KEY', "\"apikey 4Xe6lGctq0Mm3ayjBLPBaB:6ZgiblGHRIaE0gXS5HVbNu\""
            buildConfigField 'String', 'DB_NAME', "\"weather_db\""
            buildConfigField 'String', 'GENERAL_NETWORK_ERROR', "\"Something went wrong, please try again.\""
            buildConfigField 'String', 'DB_ENTRY_ERROR', "\"No entry found in database\""
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            debuggable false
        }

        applicationVariants.all {variant ->
            if(variant.buildType.name == "release") {
                variant.outputs.all {
                    outputFileName = "${applicationName}-${getDateTime()}-release-v${VERSION_NAME}.apk"
                }
            }
            else{
                variant.outputs.all {
                    outputFileName = "${applicationName}-${getDateTime()}-debug-v${VERSION_NAME}.apk"
                }
            }
        }
    }
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.1.0'
    implementation 'androidx.annotation:annotation:1.1.0'

    //design libs
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'

    //testing
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$mockitoVersion"
    testImplementation "android.arch.core:core-testing:$architectureComponents"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutinesVersion"

    //networking
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp3LogInterceptor"

    //database
    implementation "androidx.room:room-runtime:$roomVersion"
    kapt "androidx.room:room-compiler:$roomVersion"
    implementation "androidx.room:room-ktx:$roomVersion"

    //di
    implementation "org.koin:koin-android:$koinVersion"
    implementation "org.koin:koin-androidx-viewmodel:$koinVersion"
    implementation "org.koin:koin-androidx-scope:$koinVersion"

    //arhitecture components
    implementation "android.arch.lifecycle:viewmodel:$architectureComponents"
    kapt "android.arch.lifecycle:compiler:$architectureComponents"
    implementation "androidx.lifecycle:lifecycle-extensions:$architectureComponents"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$architectureComponents"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$architectureComponents"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$architectureComponents"

    //coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutinesVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion"
}
